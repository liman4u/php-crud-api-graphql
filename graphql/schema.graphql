type User {
  id: ID!
  name: String!
  email: String!
  articles: [Article!]! @hasMany
}

type Article {
  id: ID!
  title: String!
  content: String!
  author: User! @belongsTo(relation: "user")
}

type Query {
  user(id: ID! @eq): User @find
  users: [User!]! @all
  article(id: ID! @eq): Article @find
  articles: [Article!]! @all
}


type Mutation {
  createUser(
    name: String!
    email: String! @rules(apply: ["email", "unique:users"])
    password: String! @bcrypt @rules(apply: ["min:6"])
  ): User @create

  createArticle(
    title: String!, 
    content: String!, 
    user_id: Int!
  ): Article@create

  updateUser(
    id: Int!
    name: String!
    email: String! @rules(apply: ["email", "unique:users"])
    password: String! @bcrypt @rules(apply: ["min:6"])
  ): User @update

  updateArticle(
    id: Int!
    title: String!, 
    content: String!
  ): Article@update

  deleteUser(
    id: Int!
  ): User @delete

  deleteArticle(
    id: Int!
  ): Article@delete
}